# Cloud CMS Hello World

This directory provides a simple Node.js web server that connects to the Cloud CMS Sample Project
and hands back a list of Travel Guide cities.

The Cloud CMS Sample Project is included with every Cloud CMS trial.  The Sample Project provides
sample content such as cities, travel routes and airlines.  This Hello World node.js app simply
retrieves a list of cities and serializes them back as JSON.

## Install Node.js

If you are familiar with Node.js and already have it installed, you can skip ahead to Connecting to Cloud CMS.

1.  Visit http://www.nodejs.org
2.  Pick an installation of Node.js that is appropriate for your operating system and download it
3.  Run the installation using the default options

## Install the Cloud CMS Command Line Interface

Once Node.js is installed, you should connect this Hello World sample to your Cloud CMS tenant.

1.  Open up a command prompt (terminal) in the current directory
2.  Install the Cloud CMS command line interface:

    npm install cloudcms-cli -g

3.  Connect the command line client to your Cloud CMS tenant:

    cloudcms init

and you will see:

    To get your Cloud CMS client keys and login credentials,
       visit "https://www.cloudcms.com".

    Enter your Cloud CMS URL or subdomain:
    Enter your Username:
    Enter your Password:

Answer these prompts using the Cloud CMS domain URL that you received via email.

## Connecting to Cloud CMS

1.  From the command prompt, run:

    cloudcms connect

and you will see something like:

    Connect to an existing Cloud CMS application

    Which application would you like to connect to?

      1) Sample Web Site [51354ec7ac70c695cb8d]
      :

2.  Pick the Sample Web Site, press Enter and then you will see:

    Which deployment would you like to connect to?

      1) default

3.  Pick the default deployment and press Enter.

That's it, the Hello World project is now connected to Cloud CMS.

## Run Hello World

1.  Run the following:

    node app

2.  Open a browser to http://localhost:3000

3.  You will see a list of cities come back as JSON
