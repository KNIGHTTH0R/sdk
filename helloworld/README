# Cloud CMS Hello World

This directory contains 2 simple examples of using Cloud CMS

hello.js
    a very simple nodejs program that connects and outputs a single city on the console
    for simplicity
        error handling has been mostly omitted
            if it doesn't work as expected try running app.js
        the connection to Cloud CMS is only used once
            see app.js for a more practical example of a persistent connection



app.js
    a nodejs webserver that doesn't depend on any framework
        - connect to Cloud CMS
        - access the "content" datastore and the "master" branch
        - query the cities in the travel guide in the sample project
        - respond to http requests with query results


___Requirements___

    Install Node.js
    npm install

you'll need the Sample Web Site application that is created automatically when you sign up
    if you've deleted that application, these examples won't work




___Credentials___


the programs need credentials to be able to connect to Cloud CMS
they can be provided directly as the first argument in the call to gitana.connect (see app.js)
or they can be saved in a file named gitana.json in this directory
    and gitana.connect will read them automatically



Automated Method

    npm install -g cloudcms-cli
    cloudcms init
    cloudcms connect
        choose the "Sample Web Site" that is created automatically
        choose the default deployment
        this will generate a gitana.json

Manual Method
    visit http://__tenant__.cloudcms.net/#/developers
    where __tenant__ is the domain that you signed up with
    click "gitana.json"
    highlight and copy the json
    and save it as a file named "gitana.json" in this directory
        alternatively, you can paste it into app.js and assign it to the variable credentials







___To run the server___

node app.js



connect to the server using a browser at the following addresses
    http://localhost:3000


it takes a few seconds for the connection with Cloud CMS to complete
  if you access the webserver during this time,
  a message instructing you to retry in a few seconds will display instead






___To run hello.js___

node hello.js




