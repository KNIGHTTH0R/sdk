/*

A simple nodejs/express server that demonstrates
  connecting to CloudCMS
  creating nodes
  querying nodes
  deleting nodes

See the README in this directory for instructions on running

 */

var express = require('express');
var path = require('path');
var gitana = require("gitana");

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

app.use(express.static(path.join(__dirname, 'public')));

// some articles relating to programming
var article1 = {
    example: "helloworld",
    title: "hello world",
    body: "hello world is a simple program that demonstrates a roundtrip."
};
var article2 = {
    example: "helloworld",
    title: "foobar",
    body: "foobar is a common placeholder name for a variable."
};
var article3 = {
    example: "helloworld",
    title: "kludge",
    body: "kludge is a word that suggests that a solution is clumsy"
};

// connect to Cloud CMS
// this looks for gitana.json in local directory
gitana.connect(function(err) {

    if (err) {
        console.log("");
        console.log("There was a problem connecting to Cloud CMS");
        console.log(err);
        process.exit();
    }

    // read the master branch
    this.datastore("content").readBranch("master").then(function() {

        var branch = this;

        // bind controllers

        app.get("/init", function(req, res) {
            Chain(branch).then(function() {
                this.createNode(article1);
                this.createNode(article2);
                this.createNode(article3);
            }).then(function() {
                res.render("init");
            });
        });

        app.get("/", function(req, res) {
            Chain(branch).queryNodes({
                "example": "helloworld"
            }).then(function() {
                res.render("index", {
                    "nodes": this
                });
            });
        });

        app.get("/teardown", function(req, res) {
            Chain(branch).queryNodes({
                "example": "helloworld"
            }).del().then(function() {
                res.render("teardown");
            });
        });

        // catch 404
        app.use(function(req, res, next) {
            res.render('error', {
                message: "Not Found",
                error: {status:404, stack:""}
            });
        });

        // error handlers
        app.use(function(err, req, res, next) {
            res.status(err.status || 500);
            res.render('error', {
                message: err.message,
                error: err
            });
        });

    });
});











// start a webserver
app.set('port', process.env.PORT || 3000);
var server = app.listen(app.get('port'), function() {
    console.log('Express server listening on port ' + server.address().port);
});


